{"ast":null,"code":"var _jsxFileName = \"/Users/yuichifujiwara/React/xeats_temp/src/components/Search.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Results from './Results';\nimport \"./Search.css\";\nimport background from \"./AdobeStock_120766551.jpeg\";\nimport { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  const [fetchData, setFetchdata] = useState([]);\n  // const API_KEY = \"40889916-0c4daad984dff6dc9f10dcd07\";\n\n  // useRefフック: コンポーネントで参照を保持するためのフック。\n  // この例では、テキスト入力フィールドへの参照を保持している。\n  const ref = useRef(); // refに入力した値を取得する\n\n  // handleSubmit関数: フォーム送信時に実行される。\n  const handleSubmit = e => {\n    e.preventDefault(); // フォーム送信によるページリロードを防ぐ\n    console.log(ref.current.value); // 現在のテキスト入力値をログに出力\n\n    // Pixabay APIへのリクエストURLを組み立てる\n    // Pixabay APIの構成↓\n    // \"https://pixabay.com/api/?key=\" + API_KEY + \"&q=\" + {ref.current.value} + \"&image_type=photo\";\n    const endpointURL = `https://pixabay.com/api/?key=40889916-0c4daad984dff6dc9f10dcd07&q=${ref.current.value}&image_type=photo`;\n\n    // Fetch APIを使用してデータを非同期で取得\n    fetch(endpointURL).then(res => {\n      return res.json();\n    }).then(data => {\n      // data内のhitsを指定する。\n      console.log(data.hits); // 取得したデータのログ出力\n      setFetchdata(data.hits); // 状態を更新し、コンポーネントを再レンダリング\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Container\",\n    style: {\n      background: `url(${background}) center`,\n      backgroundSize: 'cover'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u732E\\u7ACB\\u3092\\u63A2\\u305D\\u3046\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u98DF\\u6750\\u3001\\u6599\\u7406\\u3001\\u5473\\u4ED8\\u3051\\u7B49\",\n        ref: ref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Results, {\n      fetchData: fetchData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"W0AGviypoA4HaXpd7ZdqRlxG06U=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","Results","background","useRef","useState","jsxDEV","_jsxDEV","Search","_s","fetchData","setFetchdata","ref","handleSubmit","e","preventDefault","console","log","current","value","endpointURL","fetch","then","res","json","data","hits","className","style","backgroundSize","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","_c","$RefreshReg$"],"sources":["/Users/yuichifujiwara/React/xeats_temp/src/components/Search.js"],"sourcesContent":["import React from \"react\";\nimport Results from './Results';\nimport \"./Search.css\";\nimport background from \"./AdobeStock_120766551.jpeg\";\nimport { useRef, useState } from 'react';\n\nconst Search = () => {\n  const [fetchData,setFetchdata] = useState([]);\n  // const API_KEY = \"40889916-0c4daad984dff6dc9f10dcd07\";\n\n  // useRefフック: コンポーネントで参照を保持するためのフック。\n  // この例では、テキスト入力フィールドへの参照を保持している。\n  const ref = useRef(); // refに入力した値を取得する\n\n  // handleSubmit関数: フォーム送信時に実行される。\n  const handleSubmit = (e) => {\n    e.preventDefault(); // フォーム送信によるページリロードを防ぐ\n    console.log(ref.current.value); // 現在のテキスト入力値をログに出力\n    \n    // Pixabay APIへのリクエストURLを組み立てる\n    // Pixabay APIの構成↓\n    // \"https://pixabay.com/api/?key=\" + API_KEY + \"&q=\" + {ref.current.value} + \"&image_type=photo\";\n    const endpointURL = `https://pixabay.com/api/?key=40889916-0c4daad984dff6dc9f10dcd07&q=${ref.current.value}&image_type=photo`;\n\n    // Fetch APIを使用してデータを非同期で取得\n    fetch(endpointURL).then((res) => {\n      return res.json();\n      })\n      .then((data) => {\n        // data内のhitsを指定する。\n        console.log(data.hits); // 取得したデータのログ出力\n        setFetchdata(data.hits);  // 状態を更新し、コンポーネントを再レンダリング\n      });\n  };\n\n  return (\n    <div className='Container'\n    style={{\n    background: `url(${background}) center`,\n    backgroundSize: 'cover',\n    }}\n    >\n      <form onSubmit={(e) => handleSubmit(e)}>\n        <h1>献立を探そう</h1>\n        <input type=\"text\" placeholder='食材、料理、味付け等' ref={ref}/>\n      </form>\n      {/* ImageGalleryンポーネント)のレンダリング */}\n      {/* fetchDataを`ImageGallery`に渡している。 */}\n      <Results fetchData={fetchData}/>\n    </div>\n    );\n  };\n\nexport default Search;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAO,cAAc;AACrB,OAAOC,UAAU,MAAM,6BAA6B;AACpD,SAASC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,SAAS,EAACC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC7C;;EAEA;EACA;EACA,MAAMO,GAAG,GAAGR,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEtB;EACA,MAAMS,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;IACpBC,OAAO,CAACC,GAAG,CAACL,GAAG,CAACM,OAAO,CAACC,KAAK,CAAC,CAAC,CAAC;;IAEhC;IACA;IACA;IACA,MAAMC,WAAW,GAAI,qEAAoER,GAAG,CAACM,OAAO,CAACC,KAAM,mBAAkB;;IAE7H;IACAE,KAAK,CAACD,WAAW,CAAC,CAACE,IAAI,CAAEC,GAAG,IAAK;MAC/B,OAAOA,GAAG,CAACC,IAAI,CAAC,CAAC;IACjB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;MACd;MACAT,OAAO,CAACC,GAAG,CAACQ,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;MACxBf,YAAY,CAACc,IAAI,CAACC,IAAI,CAAC,CAAC,CAAE;IAC5B,CAAC,CAAC;EACN,CAAC;EAED,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,WAAW;IAC1BC,KAAK,EAAE;MACPzB,UAAU,EAAG,OAAMA,UAAW,UAAS;MACvC0B,cAAc,EAAE;IAChB,CAAE;IAAAC,QAAA,gBAEAvB,OAAA;MAAMwB,QAAQ,EAAGjB,CAAC,IAAKD,YAAY,CAACC,CAAC,CAAE;MAAAgB,QAAA,gBACrCvB,OAAA;QAAAuB,QAAA,EAAI;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACf5B,OAAA;QAAO6B,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,8DAAY;QAACzB,GAAG,EAAEA;MAAI;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,eAGP5B,OAAA,CAACL,OAAO;MAACQ,SAAS,EAAEA;IAAU;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAER,CAAC;AAAC1B,EAAA,CA7CED,MAAM;AAAA8B,EAAA,GAAN9B,MAAM;AA+CZ,eAAeA,MAAM;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}